version: '3'

services:
  traefik:
    image: traefik:v2.2
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - traefik-public
    ports:
      - 80:80
      - 443:443
    volumes:
      - ../../volumes/acme:/letsencrypt
      - ../../volumes/traefik_config:/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.rule=Host(`traefik.${DOMAIN}`)
        - traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.entrypoints=http
        - traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.middlewares=redirect-to-https@docker
        - traefik.http.routers.${COMPOSE_PROJECT_NAME}-https.entrypoints=https
        - traefik.http.routers.${COMPOSE_PROJECT_NAME}-https.tls.certresolver=http
        - traefik.http.routers.${COMPOSE_PROJECT_NAME}-https.rule=Host(`traefik.${DOMAIN}`)
        - traefik.http.routers.${COMPOSE_PROJECT_NAME}-https.service=api@internal
        - traefik.http.routers.${COMPOSE_PROJECT_NAME}-https.middlewares=auth-${COMPOSE_PROJECT_NAME}
        - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
        - traefik.http.middlewares.auth-${COMPOSE_PROJECT_NAME}.basicauth.users=${AUTH_USER}:${AUTH_PWD}
        - traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=9999 # Dummy service for Swarm port detection.
        - traefik.http.routers.${COMPOSE_PROJECT_NAME}-https.tls.options=default-tls@file
        - traefik.http.routers.${COMPOSE_PROJECT_NAME}-https.tls.domains[0].main=${DOMAIN}
        - traefik.http.routers.${COMPOSE_PROJECT_NAME}-https.tls.domains[0].sans=*.${DOMAIN}
        - traefik.http.middlewares.https.headers.STSSeconds=315360000
        - traefik.http.middlewares.https.headers.browserXSSFilter=true
        - traefik.http.middlewares.https.headers.contentTypeNosniff=true
        - traefik.http.middlewares.https.headers.forceSTSHeader=true
        - traefik.http.middlewares.https.headers.frameDeny=true
        - traefik.http.middlewares.https.headers.STSIncludeSubdomains=true
        - traefik.http.middlewares.https.headers.STSPreload=true
        - traefik.http.middlewares.https.headers.SSLRedirect=true
#        - traefik.http.middlewares.https.headers.SSLHost=file.${DOMAIN}
    command: >
      --api=true
      --providers.file.directory=/config/
      --providers.file.watch=true
      --global.sendAnonymousUsage=false
      --providers.docker.endpoint=unix:///var/run/docker.sock
      --providers.docker.swarmMode=true
      --providers.docker.exposedbydefault=false
      --providers.docker.network=traefik-public
      --entrypoints.http.address=:80
      --entrypoints.https.address=:443
      --certificatesresolvers.http.acme.httpchallenge=true
      --certificatesresolvers.http.acme.httpchallenge.entrypoint=http
      --certificatesresolvers.http.acme.email=${EMAIL}
      --certificatesresolvers.http.acme.storage=/letsencrypt/acme.json
      --certificatesresolvers.dns.acme.dnsChallenge=true
      --certificatesresolvers.dns.acme.dnsChallenge.provider=netcup
      --certificatesresolvers.dns.acme.dnsChallenge.delayBeforeCheck=600
      --certificatesresolvers.dns.acme.email=${EMAIL}
      --certificatesresolvers.dns.acme.storage=/letsencrypt/acme.json
#      --certificatesresolvers.http.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
#      --certificatesresolvers.dns.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory

  cert-dumper:
    image: ldez/traefik-certs-dumper:v2.7.0
    restart: unless-stopped
    volumes:
      - ../../volumes/acme/:/in
      - ../../volumes/certificates/:/out
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      placement:
        constraints:
          - node.role == manager
    command: >
      file
      --source=/in/acme.json
      --dest /out
      --watch
      --version=v2
      --domain-subdir=true
#      --clean=false
#      --post-hook=/hook.sh
#curl -XPOST --unix-socket /var/run/docker.sock -H 'Content-Type: application/json' http://localhost/containers/${COMTAINER-ID}/restart

networks:
  traefik-public:
    external: true
